#!/usr/bin/env python3
"""
Simple test to verify endpoints are working
"""

import requests

def test_endpoints():
    """Test if endpoints are available"""
    print("üß™ Testing endpoint availability...")
    
    # Test health endpoint
    try:
        response = requests.get("http://localhost:8000/health", timeout=5)
        if response.status_code == 200:
            print("‚úÖ Health endpoint working")
        else:
            print(f"‚ùå Health endpoint failed: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå Cannot connect to server: {e}")
        return
    
    # Test if profiles endpoint exists
    try:
        response = requests.get("http://localhost:8000/profiles/me", timeout=5)
        if response.status_code == 401:  # Unauthorized is expected without token
            print("‚úÖ Profiles endpoint exists (401 expected without auth)")
        elif response.status_code == 404:
            print("‚ùå Profiles endpoint not found - server may need restart")
        else:
            print(f"‚ö†Ô∏è  Profiles endpoint returned: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Profiles endpoint test failed: {e}")
    
    # Test if moods endpoint exists
    try:
        response = requests.get("http://localhost:8000/moods/", timeout=5)
        if response.status_code == 401:  # Unauthorized is expected without token
            print("‚úÖ Moods endpoint exists (401 expected without auth)")
        elif response.status_code == 404:
            print("‚ùå Moods endpoint not found - server may need restart")
        else:
            print(f"‚ö†Ô∏è  Moods endpoint returned: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Moods endpoint test failed: {e}")
    
    # Test if predictions endpoint exists
    try:
        response = requests.get("http://localhost:8000/predictions/current", timeout=5)
        if response.status_code == 401:  # Unauthorized is expected without token
            print("‚úÖ Predictions endpoint exists (401 expected without auth)")
        elif response.status_code == 404:
            print("‚ùå Predictions endpoint not found - server may need restart")
        else:
            print(f"‚ö†Ô∏è  Predictions endpoint returned: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Predictions endpoint test failed: {e}")

if __name__ == "__main__":
    test_endpoints()
